// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// AIC
double AIC(arma::mat S, arma::mat theta, int n, bool stop_overflow);
RcppExport SEXP _fastGHS_AIC(SEXP SSEXP, SEXP thetaSEXP, SEXP nSEXP, SEXP stop_overflowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type stop_overflow(stop_overflowSEXP);
    rcpp_result_gen = Rcpp::wrap(AIC(S, theta, n, stop_overflow));
    return rcpp_result_gen;
END_RCPP
}
// ECM_GHS
List ECM_GHS(arma::mat X, arma::mat S, arma::mat theta, arma::mat sigma, arma::mat Lambda_sq, double epsilon, bool verbose, int maxitr, bool savepath, bool save_Q, double tau_sq, double machine_eps, bool fix_tau, bool stop_underflow, bool savepath_tau);
RcppExport SEXP _fastGHS_ECM_GHS(SEXP XSEXP, SEXP SSEXP, SEXP thetaSEXP, SEXP sigmaSEXP, SEXP Lambda_sqSEXP, SEXP epsilonSEXP, SEXP verboseSEXP, SEXP maxitrSEXP, SEXP savepathSEXP, SEXP save_QSEXP, SEXP tau_sqSEXP, SEXP machine_epsSEXP, SEXP fix_tauSEXP, SEXP stop_underflowSEXP, SEXP savepath_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda_sq(Lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< int >::type maxitr(maxitrSEXP);
    Rcpp::traits::input_parameter< bool >::type savepath(savepathSEXP);
    Rcpp::traits::input_parameter< bool >::type save_Q(save_QSEXP);
    Rcpp::traits::input_parameter< double >::type tau_sq(tau_sqSEXP);
    Rcpp::traits::input_parameter< double >::type machine_eps(machine_epsSEXP);
    Rcpp::traits::input_parameter< bool >::type fix_tau(fix_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type stop_underflow(stop_underflowSEXP);
    Rcpp::traits::input_parameter< bool >::type savepath_tau(savepath_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ECM_GHS(X, S, theta, sigma, Lambda_sq, epsilon, verbose, maxitr, savepath, save_Q, tau_sq, machine_eps, fix_tau, stop_underflow, savepath_tau));
    return rcpp_result_gen;
END_RCPP
}
// ECM_GHS_AIC
List ECM_GHS_AIC(arma::mat X, arma::mat S, arma::mat theta, arma::mat sigma, arma::mat Lambda_sq, double AIC_eps, arma::vec tau_sq_vec, double epsilon, bool verbose, int maxitr, bool savepath, bool save_Q, double tau_sq, double machine_eps, bool stop_underflow, bool stop_overflow);
RcppExport SEXP _fastGHS_ECM_GHS_AIC(SEXP XSEXP, SEXP SSEXP, SEXP thetaSEXP, SEXP sigmaSEXP, SEXP Lambda_sqSEXP, SEXP AIC_epsSEXP, SEXP tau_sq_vecSEXP, SEXP epsilonSEXP, SEXP verboseSEXP, SEXP maxitrSEXP, SEXP savepathSEXP, SEXP save_QSEXP, SEXP tau_sqSEXP, SEXP machine_epsSEXP, SEXP stop_underflowSEXP, SEXP stop_overflowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda_sq(Lambda_sqSEXP);
    Rcpp::traits::input_parameter< double >::type AIC_eps(AIC_epsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_sq_vec(tau_sq_vecSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< int >::type maxitr(maxitrSEXP);
    Rcpp::traits::input_parameter< bool >::type savepath(savepathSEXP);
    Rcpp::traits::input_parameter< bool >::type save_Q(save_QSEXP);
    Rcpp::traits::input_parameter< double >::type tau_sq(tau_sqSEXP);
    Rcpp::traits::input_parameter< double >::type machine_eps(machine_epsSEXP);
    Rcpp::traits::input_parameter< bool >::type stop_underflow(stop_underflowSEXP);
    Rcpp::traits::input_parameter< bool >::type stop_overflow(stop_overflowSEXP);
    rcpp_result_gen = Rcpp::wrap(ECM_GHS_AIC(X, S, theta, sigma, Lambda_sq, AIC_eps, tau_sq_vec, epsilon, verbose, maxitr, savepath, save_Q, tau_sq, machine_eps, stop_underflow, stop_overflow));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fastGHS_AIC", (DL_FUNC) &_fastGHS_AIC, 4},
    {"_fastGHS_ECM_GHS", (DL_FUNC) &_fastGHS_ECM_GHS, 15},
    {"_fastGHS_ECM_GHS_AIC", (DL_FUNC) &_fastGHS_ECM_GHS_AIC, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_fastGHS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
